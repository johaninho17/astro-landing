---
---
<div class="relative isolate overflow-hidden h-[350px] sm:h-[500px] lg:h-[600px] mb-4 sm:px-2 px-4">
    <!-- Image Container -->
    <div class="absolute inset-0 w-full h-full overflow-hidden sm:m-0">
        <img
            class="slider-image "
            src="/images/paris.png"
            alt="Paris Background"
        />
        <img
            class="slider-image"
            src="/images/london.png"
            alt="London Background"
        />
        <img
            class="slider-image"
            src="/images/berlin.png"
            alt="Berlin Background"
        />
        <img
            class="slider-image"
            src="/images/stockholm.png"
            alt="Stockholm Background"
        />
        <img
            class="slider-image"
            src="/images/brussels.png"
            alt="Brussels Background"
        />
        <img
            class="slider-image"
            src="/images/amsterdam.png"
            alt="Amsterdam Background"
        />
        <img
            class="slider-image"
            src="/images/rome.png"
            alt="Rome Background"
        />
    </div>

    <!-- Overlay -->
    <div class="absolute inset-0">
        <img
            src="/images/blue-hue.png"
            alt="Overlay"
            class="absolute w-full h-full object-fill"
        />
        <div class="absolute max-w-2xl px-4 mx-auto my-24 sm:my-32 sm:text-left sm:px-4">
            <h1
                class="font-extrabold text-white text-xl sm:text-3xl md:text-6xl leading-normal"
            >
                Your Partner in Entering the European IT Market
            </h1>            
            <p class="mt-6 lg:text-lg sm:text-sm font-roboto text-white lg:line-clamp-2 leading-relaxed">
                <strong
                    >We advise and assist IT companies in establishing and 
                    expanding their presence in the European Market.</strong
                >
            </p>
        </div>
    </div>
</div>

<script client:load>
    // Use a variable in a higher scope to store the interval ID
    let heroSliderIntervalId = null;

    function initializeHeroSlider() {
        // Clear any previously running interval to prevent duplicates
        if (heroSliderIntervalId) {
            clearInterval(heroSliderIntervalId);
            heroSliderIntervalId = null;
            // console.log("Cleared previous hero interval"); // Optional: for debugging
        }

        const images = document.querySelectorAll(".slider-image");
        if (images.length === 0) {
            // console.log("No slider images found"); // Optional: for debugging
            return; // Exit if no images are found
        }

        let currentIndex = 0;

        // --- Reset initial state ---
        // Ensure first image is visible and correctly positioned, others hidden/off-screen
        images.forEach((img, index) => {
            // Remove animation classes in case navigation happened mid-animation
            img.classList.remove('slide-out-left', 'slide-in-right');
            if (index === 0) {
                img.style.transform = "translateX(0)";
                img.style.visibility = "visible";
            } else {
                img.style.transform = "translateX(100%)";
                img.style.visibility = "hidden";
            }
        });
        // console.log("Hero slider initialized/reset"); // Optional: for debugging

        function changeBackground() {
            // Ensure we still have images (might be needed if DOM changes unexpectedly)
             const currentImages = document.querySelectorAll(".slider-image");
             if (currentImages.length === 0) {
                 clearInterval(heroSliderIntervalId); // Stop if images disappear
                 return;
             }

            const currentImage = currentImages[currentIndex];
            const nextIndex = (currentIndex + 1) % currentImages.length;
            const nextImage = currentImages[nextIndex];

            // Ensure the next image is visible and positioned off-screen before animation
            nextImage.style.visibility = "visible";
            nextImage.style.transform = "translateX(100%)";

            // Trigger the slide animations
            currentImage.classList.add("slide-out-left");
            nextImage.classList.add("slide-in-right");

            // Wait for the animation to complete (use animation duration)
            // Use setTimeout for cleanup after animation
            setTimeout(() => {
                // Check if elements still exist before manipulating
                if (currentImage) {
                    currentImage.classList.remove("slide-out-left");
                    currentImage.style.visibility = "hidden";
                    // Reset transform after it's hidden
                    currentImage.style.transform = "translateX(100%)";
                }
                if (nextImage) {
                    nextImage.classList.remove("slide-in-right");
                    // Ensure final position is correct
                    nextImage.style.transform = "translateX(0)";
                }

                // Update the current index *after* the transition logic for the next cycle
                currentIndex = nextIndex;

            }, 2500); // Match the duration of the CSS animation (2500ms)
        }

        // Start the background transition interval and store its ID
        heroSliderIntervalId = setInterval(changeBackground, 7500); // Total cycle time
    }

    // Run the initialization function on initial page load
    initializeHeroSlider();

    // Add the event listener to re-initialize after client-side navigation
    document.addEventListener("astro:page-load", initializeHeroSlider);

    // Optional: Cleanup when navigating away (might be redundant if astro:page-load clears correctly)
    // document.addEventListener("astro:before-swap", () => {
    //    if (heroSliderIntervalId) {
    //        clearInterval(heroSliderIntervalId);
    //        heroSliderIntervalId = null;
    //        console.log("Cleared hero interval on page unload");
    //    }
    // });

</script>

<style>
/* Sliding animations */
.slide-out-left, .slide-in-right {
    animation-timing-function: ease-in-out;
}

.slide-out-left {
    animation: slide-out-left 2500ms forwards;
}

@keyframes slide-out-left {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(-100%);
    }
}

.slide-in-right {
    animation: slide-in-right 2500ms forwards;
}

@keyframes slide-in-right {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(0);
    }
}

/* Ensure all images are positioned correctly */
.slider-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: translateX(100%); /* Start off-screen to the right */
    visibility: hidden; /* Keep the element in the rendering flow */
}

.slider-image:first-child {
    transform: translateX(0); /* The first image is visible initially */
    visibility: visible;
}
</style>